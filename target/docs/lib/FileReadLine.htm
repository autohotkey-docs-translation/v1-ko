<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>FileReadLine - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The FileReadLine command reads the specified line from a file and stores the text in a variable." />
<meta name="ahk:equiv-v2" content="objects/File.htm#ReadLine" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>FileReadLine</h1>

<p>파일로부터 특정 줄을 읽어서 그 텍스트를 <a href="../Variables.htm">변수</a>에 저장합니다.</p>

<pre class="Syntax"><span class="func">FileReadLine</span>, OutputVar, Filename, LineNum</pre>
<h2 id="Parameters">매개변수</h2>
<dl>

  <dt>OutputVar</dt>
  <dd><p>열람한 텍스트를 저장할 <a href="../Variables.htm">변수</a>의 이름.</p></dd>

  <dt>Filename</dt>
  <dd><p>접근할 파일의 이름. 절대 경로를 지정하지 않으면 <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a>에 있다고 간주됩니다. Windows 그리고 Unix 포맷이 지원됩니다; 즉, 파일의 줄은 캐리지 리턴과 라인피드 (`r`n) 또는 그냥 라인피드 (`n)로 끝납니다.</p></dd>

  <dt>LineNum</dt>
  <dd><p>읽을 줄 번호 (1이면 첫 줄, 2이면 두 번째, 등등). 이것은 <a href="../Variables.htm#Expressions">표현식</a>일 수 있습니다.</p>
    <p>지정된 줄 번호가 파일의 줄 개수보다 크면, <a href="../misc/ErrorLevel.htm">ErrorLevel</a>은 1이 설정되고 <em>OutputVar</em>는 바뀌지 않습니다. 이것은 또한 지정된 줄 번호가 파일의 마지막 줄이지만 그 줄이 비어 있고 새줄/CRLF로 끝나지 않은 경우에도 일어납니다.</p></dd>

</dl>

<h2 id="Error_Handling">에러 처리</h2>
<p><span class="ver">[v1.1.04+]</span>: 이 명령어는 실패하면 예외를 던질 수 있습니다. 더 자세한 정보는 <a href="Catch.htm#RuntimeErrors">실행시간 에러</a>를 참조하십시오.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a>은 성공하면 0이 설정됩니다. 그렇지 않으면 1이 설정되고 <em>OutputVar</em>의 원래 내용도 바뀌지 않습니다.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a>는 운영 체제의 GetLastError() 함수의 결과가 설정됩니다.</p>

<h2 id="Remarks">논평</h2>
<p>이 명령어는 작은 파일들에만 사용할 것을 강력 권합니다. 또는 한 줄의 텍스트만 필요한 경우에 사용하십시오. 방대한 개수의 줄을 스캔하고 처리하려면 (한 줄씩), 최고의 수행성을 위해 <a href="LoopReadFile.htm">파일-일기 회돌이</a>를 사용하십시오. 전체 파일을 변수 안으로 읽어 들이려면, <a href="FileRead.htm">FileRead</a>를 사용하십시오.</p>
<p>줄에서 선두와 후미의 탭과 스페이스는 <em>OutputVar</em>에 씌여지겠지만, 줄 끝의 라인피드 문자 (`n)는 그렇지 않습니다. 탭과 스페이스는 변수 양끝으로부터 걷어낼 수 있습니다. <a href="AutoTrim.htm">AutoTrim</a>이 켜져 있는 (기본값) 상태에서 할당하면 됩니다. 예를 들어: <code>MyLine = %MyLine%</code>.</p>
<p>65,534 문자 길이 까지 줄을 읽을 수 있습니다. 줄 길이가 이 제한을 초과하면, 나머지 문자들은 다음 명령어로 열람할 수 없습니다 (대신에 <a href="FileRead.htm">FileRead</a> 또는 <a href="LoopReadFile.htm">파일-읽기 회돌이</a>를 사용하십시오).</p>
<h2 id="Related">관련 항목</h2>
<p><a href="FileOpen.htm">FileOpen()</a>/<a href="../objects/File.htm#ReadLine">File.ReadLine()</a>, <a href="FileRead.htm">FileRead</a>, <a href="FileAppend.htm">FileAppend</a>, <a href="LoopReadFile.htm">파일-읽기 회돌이</a>, <a href="IniRead.htm">IniRead</a></p>
<h2 id="Examples">예제</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Reads a text file line by line. Note that the same (but with better performance) can be achieved by using a <a href="LoopReadFile.htm">file-reading loop</a>.</p>
<pre>Loop
{
    FileReadLine, line, C:\My Documents\ContactList.txt, %A_Index%
    if ErrorLevel
        break
    MsgBox, 4, , 줄 #%A_Index%는 "%line%"입니다.  계속할까요?
    IfMsgBox, No
        return
}
MsgBox, 파일 끝에 도달했습니다. 또는 문제가 있었습니다.
return</pre>
</div>

</body>
</html>
