<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>Run / RunWait - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The Run and RunWait commands run an external program. RunWait는 실행을 계속하기 전에 프로그램이 끝날 때까지 기다립니다." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<style type="text/css">
.style3 {color: #FF0000; font-weight: bold; }
</style>
</head>
<body>

<h1>Run / RunWait</h1>

<p>외부 프로그램을 실행합니다. Run과 다르게, RunWait는 실행을 계속하기 전에 프로그램이 끝날 때까지 기다립니다.</p>

<pre class="Syntax">
<span class="func">Run</span>, Target <span class="optional">, WorkingDir, Options, OutputVarPID</span>
<span class="func">RunWait</span>, Target <span class="optional">, WorkingDir, Options, OutputVarPID</span>
</pre>
<h2 id="Parameters">매개변수</h2>
<dl>

  <dt>Target</dt>
  <dd><p>기동할 문서, URL, 실행 파일 (.exe, .com, .bat, etc.), 단축 아이콘 (.lnk), 또는 <a href="#verbs">문맥 메뉴</a> (논평 참조). <em>Target</em>이 지역 파일이고 경로가 지정되어 있지 않으면, <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>이 제일 먼저 검색됩니다. 거기에서 부합하는 파일이 없으면, 운영체제는 ("알고 있는") PATH 폴더를 검색해 발견하면 그 파일을 기동합니다.</p>
      <p>매개변수를 건네려면, 프로그램이나 문서 이름 다음에 바로 그것들을 추가합니다. 매개변수에 스페이스가 담겨 있다면, (어떤 경우는 겹따옴표 없이도 잘 작동하겠지만) 그것을 겹따옴표 안에 둘러싸는 것이 가장 안전합니다.</p></dd>

  <dt>WorkingDir</dt>
  <dd><p>기동된 항목을 위한 작업 디렉토리. 안에 스페이스가 있더라도 이름을 겹따옴표로 둘러싸지 마십시오. 생략하면, 스크립트의 작업 디렉토리가 (<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>) 사용됩니다.</p></dd>

  <dt>Options</dt>
  <dd><p>If omitted, the command launches <em>Target</em> normally and shows a warning dialog whenever <em>Target</em> could not be launched. To change this behavior, specify one or more of the following words:</p>
      <p><strong>Max</strong>: 최대화 기동</p>
      <p><strong>Min</strong>: 최소화 기등</p>
      <p><strong>Hide</strong>: 숨은 채로 기동 (위와 조합해 사용할 수 없습니다)</p>
      <p class="note"><strong>주의</strong>: 어떤 어플리케이션은 (예, Calc.exe) 요청한 기동 상태를 준수하지 않습니다. 그런 경우 Max/Min/Hide는 아무 효과가 없습니다.</p>
      <p id="UseErrorLevel"><strong>UseErrorLevel</strong>: UseErrorLevel 홀로 지정하거나 위이 단어 중 하나에 추가해 지정할 수 있습니다 (다른 단어와는 스페이스로 구분합니다). 기동에 실패하면, 이 옵션은 경고 대화상자를 건너뛰고, <a href="../misc/ErrorLevel.htm">ErrorLevel</a>에 ERROR를 설정하며, 그리고 <a href="../misc/Threads.htm">현재 쓰레드</a>를 계속 진행합니다. 기동에 성공하면, RunWait는 <a href="../misc/ErrorLevel.htm">ErrorLevel</a>을 프로그램의 종료 코드에 설정하고, Run은 거기에 0을 설정합니다.</p>
      <p id="LastError">UseErrorLevel이 지정되면, 변수 <strong>A_LastError</strong>는 운영 체제의 GetLastError() 함수의 결과에 설정됩니다. A_LastError는 0부터 4294967295 사이의 숫자입니다 (언제나 십진수로 포맷됩니다. 십육진수로 포맷되지 않습니다). 영 (0)은 성공을 뜻하지만, 다른 숫자는 기동에 실패했다는 뜻입니다. 각 숫자는 특정한 에러 조건에 상당합니다 (목록은 <a href="https://www.microsoft.com">www.microsoft.com</a>에서 "시스템 에러 코드"를 검색해 보십시오). <a href="../misc/ErrorLevel.htm">ErrorLevel</a>처럼, A_LastError는 쓰레드마다 설정됩니다; 즉, 다른 <a href="../misc/Threads.htm">쓰레드</a>가 인터럽트 해도 변경되지 않습니다. 그렇지만, A_LastError는 <a href="DllCall.htm#LastError">DllCall()</a>이 설정하기도 합니다.</p></dd>

  <dt>OutputVarPID</dt>
  <dd><p>새로 기동한 프로그램의 유일한 <a href="Process.htm">Process ID (PID)</a>를 저장할 변수의 이름입니다. PID를 결정할 수 없으면 변수는 비어 있습니다, 보통 그런 경우는 실행 파일 보다는 문맥 메뉴, 문서, 또는 단축 아이콘을 기동할 때 일어납니다. RunWait도 이 매개변수를 지원합니다. 그렇지만 그의 <em>OutputVarPID</em>는 반드시 <a href="../misc/Threads.htm">또다른 메쏘드</a>에서 점검해야 합니다 (그렇지 않으면, 다음 RunWait가 실행하는 줄에 도달할 즈음이면 프로세스가 종료되어 버리기 때문에 PID는 무효가 되어 버립니다).</p>
      <p>Run 명령어가 PID를 실행한 후, 해당 프로세스가 만든 창은 아직 존재하지 않을 수 있습니다. 적어도 하나의 창은 만들어지기를 기다리려면, <code><a href="WinWait.htm">WinWait</a> ahk_pid %OutputVarPID%</code>를 사용하십시오.</p></dd>

</dl>
<h2 id="Error_Handling">에러 처리</h2>
<p><span class="ver">[v1.1.04+]</span>: 이 명령어는 실패하면 예외를 던질 수 있습니다. 더 자세한 정보는 <a href="Catch.htm#RuntimeErrors">실행시간 에러</a>를 참조하십시오.</p>
<p>Run: (위의) UseErrorLevel이 효과가 없는 한, <a href="../misc/ErrorLevel.htm">ErrorLevel</a>을 설정하지 않습니다. 실패시 ErrorLevel은 단어 ERROR이 설정되고 성공하면 0이 설정됩니다.</p>
<p>RunWait: ErrorLevel을 프로그램의 종료 코드에 설정합니다 (부호있는 32-비트 정수). UseErrorLevel가 영향을 미치고 기동에 실패하면 단어 ERROR가 저장됩니다.</p>
<h2 id="Remarks">논평</h2>
<p>Run과 다르게, RunWait는 <em>Target</em>이 종료하거나 끝날 때까지 기다립니다. 종료 시에 <a href="../misc/ErrorLevel.htm">ErrorLevel</a>이 프로그램의 종료 코드에 설정됩니다 (부호있는 32-비트 정수). 어떤 프로그램은 여전히 실행 중임에도 불구하고 즉시 반환되는 듯 보입니다; 이런 프로그램은 또다른 프로세스를 퍼트립니다.</p>
<p><em>Target</em>에 쉼표가 담겨 있으면, 다음 예제에 보여주는 바와 같이 세 번 <a href="../misc/EscapeChar.htm">피신</a>시켜야 합니다:</p>
<pre>Run rundll32.exe shell32.dll<span class="style3">`,</span>Control_RunDLL desk.cpl<span class="style3">`,`,</span> 3  <em>; 제어판 &gt; 디스플레이 &gt; 설정이 열립니다</em></pre>
<p><a href="../Variables.htm#ComSpec">ComSpec</a>을 통하여 프로그램을 실행할 때 (cmd.exe) -- 아마도 프로그램의 입력이나 출력을 방향전환해야 할 필요가 있기 때문에 -- 실행 파일의 이름이나 경로에 스페이스가 포함되어 있으면, 전체 문자열을 바깥쪽에서 따옴표로 둘러 싸야 합니다. 다음 예제에서, 바깥 따옴표는 빨간색으로 보이고 아쪽의 모든 따옴표는 검정색으로 보입니다:</p>
<pre>Run %ComSpec% /c <span class="style3">"</span>"C:\My Utility.exe" "param 1" "second param" &gt;"C:\My File.txt"<span class="style3">"</span></pre>
<p><em>Target</em>을 기동할 수 없으면, 에러 창이 화면에 나타나고 현재 쓰레드는 종료합니다. 문자열 <strong>UseErrorLevel</strong>이 세 번째 매개변수에 포함되어 있거나 에러를 <a href="Try.htm">Try</a>/<a href="Catch.htm">Catch</a> 서술문으로 잡는 경우는 예외로 합니다.</p>
<p><em>Target</em>이 정확한 경로이면, 수행성능이 약간 개선될 수 있습니다. 예, <code>Run, C:\My Documents\Test.txt</code> 말고 <code>Run, C:\Windows\Notepad.exe "C:\My Documents\Test.txt"</code>으로 지정합니다.</p>
<p>특수한 <a href="../misc/CLSID-List.htm">CLSID 폴더</a>는 Run을 통하여 열 수 있습니다. 예를 들어:</p>
<pre>Run ::{20d04fe0-3aea-1069-a2d8-08002b30309d}  <em>; "내 컴퓨터" 폴더를 엽니다.</em>
Run ::{645ff040-5081-101b-9f08-00aa002f954e}  <em>; 휴지통을 엽니다.</em></pre>
<p id="verbs">문맥 메뉴는 탐색창에서 파일에 우클릭하면 나타나는 조치들에 상응합니다. 파일이 문맥 메뉴 없이 기동하면, 기본 문맥 메뉴가 (보통 "open") 그 특정한 파일 유형에 대하여 사용됩니다. 지정하면, 문맥 메뉴는 목표 파일 이름 다음에 따라와야 합니다. 현재 다음 문맥 메뉴를 지원합니다:</p>
<table class="info">
  <tr>
    <th style="width:8%">Verb</th>
    <th abbr="설명">설명</th>
  </tr>
  <tr>
    <td>*<i>verb</i></td>
    <td><span class="ver">[AHK_L 57+]:</span> 시스템에-정의된 또는 맞춤 문맥 메뉴. 예를 들어: <code>Run *Compile %A_ScriptFullPath%</code>. 윈도우즈 비스타 이후에서, <a href="#RunAs">*RunAs</a> 문맥 메뉴를 <i>Run as administrator</i> 우클릭 메뉴 항목 대신에 사용할 수 있습니다.</td>
  </tr>
  <tr>
    <td>properties</td>
    <td>
      <p>지시한 파일에 대하여 탐색기의 특성 창을 보여줍니다. 예를 들어: <code>Run, properties "C:\My File.txt"</code></p>
      <p class="note"><strong>주의</strong>: 특성 창은 스크립트가 종료할 때 자동으로 닫힙니다. 이를 피하려면, <a href="WinWait.htm">WinWait</a>를 사용해 창이 나타나기를 기다린 다음, <a href="WinWaitClose.htm">WinWaitClose</a>를 사용해 사용자가 닫기를 기다리십시오.</p>
    </td>
  </tr>
  <tr>
    <td>find</td>
    <td>지시된 폴더에 대하여 탐색기의 파일 검색 또는 찾기 창의 실체를 엽니다. 예를 들어: <code>Run, find D:\</code></td>
  </tr>
  <tr>
    <td>explore</td>
    <td>지시된 폴더에 탐색기의 실체를 엽니다. 예를 들어: <code>Run, explore %A_ProgramFiles%</code>.</td>
  </tr>
  <tr>
    <td>edit</td>
    <td>지시된 파일을 편집을 위해 엽니다. 지시된 파일의 유형에 "edit" 조치가 연관되어 있지 않으면 작동하지 않을 수도 있습니다. 예를 들어: <code>Run, edit "C:\My File.txt"</code></td>
  </tr>
  <tr>
    <td>open</td>
    <td>지시된 파일을 엽니다 (보통 필요하지 않습니다. 대부분의 파일 유형에 기본 조치이기 때문입니다). 예를 들어: <code>Run, open "My File.txt"</code>.</td>
  </tr>
  <tr>
    <td>print</td>
    <td>지시된 파일을 연관된 어플리케이션으로 인쇄합니다. 예를 들어: <code>Run, print "My File.txt"</code></td>
  </tr>
</table>
<p>RunWait가 대기 상태에 있는 동안, 새 <a href="../misc/Threads.htm">쓰레드</a>를 <a href="../Hotkeys.htm">핫키</a>, <a href="Menu.htm">맞춤 메뉴 항목</a>, 또는 <a href="SetTimer.htm">타이머</a>를 통하여 기동할 수 있습니다.</p>

<h2 id="RunAs">Run as Administrator <span class="ver">[AHK_L 57+]:</span></h2>
<p>For an executable file, the <em>*RunAs</em> verb is equivalent to selecting <em>Run as administrator</em> from the right-click menu of the file. For example, the following code attempts to restart the current script as admin:</p>
<pre>full_command_line := DllCall("GetCommandLine", "str")

if not (A_IsAdmin or RegExMatch(full_command_line, " /restart(?!\S)"))
{
    try
    {
        if A_IsCompiled
            Run *RunAs "%A_ScriptFullPath%" /restart
        else
            Run *RunAs "%A_AhkPath%" /restart "%A_ScriptFullPath%"
    }
    ExitApp
}

MsgBox A_IsAdmin: %A_IsAdmin%`nCommand line: %full_command_line%</pre>
<p>If the user cancels the UAC dialog or Run fails for some other reason, the script will simply exit.</p>
<p>Using <a href="../Scripts.htm#SlashR">/restart</a> ensures that a <a href="_SingleInstance.htm">single instance</a> prompt is not shown if the new instance of the script starts before ExitApp is called.</p>
<p>If UAC is disabled, <em>*RunAs</em> will launch the process without elevating it. Checking for <code>/restart</code> in the command line ensures that the script does not enter a runaway loop in that case. Note that <code>/restart</code> is a built-in switch, so is not included in the <a href="../Scripts.htm#cmd_args">array of command-line parameters</a>.</p>
<p>The example can be modified to fit the script's needs:</p>
<ul>
  <li>If the script absolutely requires admin rights, check A_IsAdmin a second time in case <em>*RunAs</em> failed to elevate the script (i.e. because UAC is disabled).</li>
  <li>To keep the script running even if the user cancels the UAC prompt, move ExitApp into the try block.</li>
  <li>To keep the script running even if it failed to restart (i.e. because the script file has been changed or deleted), remove ExitApp and use RunWait instead of Run. On success, <code>/restart</code> causes the new instance to terminate the old one. On failure, the new instance exits and RunWait returns.</li>
</ul>
<p><span class="ver">[v1.0.92.01+]:</span> If UAC is enabled, the AutoHotkey installer registers the <em>RunAs</em> verb for <em>.ahk</em> files, which allows <code>Run *RunAs script.ahk</code> to launch a script as admin with the default executable.</p>

<h2 id="Related">관련 항목</h2>
<p><a href="RunAs.htm">RunAs</a>, <a href="Process.htm">Process</a>, <a href="Exit.htm">Exit</a>, <a href="../misc/CLSID-List.htm">CLSID List</a>, <a href="DllCall.htm">DllCall()</a></p>

<h2 id="Examples">예제</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Run is able to launch Windows system programs from any directory. Note that executable file extensions such as .exe can be omitted.</p>
<pre>Run, notepad</pre>
</div>

<div class="ex" id="ExURL">
<p><a class="ex_number" href="#ExURL"></a> Run is able to launch URLs:</p>
<p>The following opens an internet address in the user's default web browser.</p>
<pre>Run, https://www.google.com</pre>
<p>The following opens the default e-mail application with the recipient filled in.</p>
<pre>Run, mailto:someone@somedomain.com</pre>
<p>The following does the same as above, plus the subject and body.</p>
<pre>Run, mailto:someone@somedomain.com?subject=This is the subject line&amp;body=This is the message body's text.</pre>
</div>

<div class="ex" id="ExErrorLevel">
<p><a class="ex_number" href="#ExErrorLevel"></a> Opens a document in a maximized application and displays a custom error message on failure.</p>
<pre>Run, ReadMe.doc, , Max UseErrorLevel
if (ErrorLevel = "ERROR")
    MsgBox 문서를 기동할 수 없었습니다.</pre>
</div>

<div class="ex" id="ExVerb">
<p><a class="ex_number" href="#ExVerb"></a> Runs the dir command in minimized state and stores the output in a text file. After that, the text file and its properties dialog will be opened.</p>
<pre>#Persistent
RunWait, %ComSpec% /c dir C:\ &gt;&gt;C:\DirTest.txt, , Min
Run, C:\DirTest.txt
Run, properties C:\DirTest.txt</pre>
</div>

<div class="ex" id="ExCLSID">
<p><a class="ex_number" href="#ExCLSID"></a> Run is able to launch <a href="../misc/CLSID-List.htm">CLSIDs</a>:</p>
<p>The following opens the recycle bin.</p>
<pre>Run, ::{645ff040-5081-101b-9f08-00aa002f954e}</pre>
<p>The following opens the "My Computer" directory.</p>
<pre>Run, ::{20d04fe0-3aea-1069-a2d8-08002b30309d}</pre>
</div>

<div class="ex" id="ExMultipleCmds">
<p><a class="ex_number" href="#ExMultipleCmds"></a> 여러 명령어를 연속적으로 실행하려면, 사이에 "&amp;&amp;"를 사용하십시오.</p>
<pre>Run, %ComSpec% /c dir /b &gt; C:\list.txt &amp;&amp; type C:\list.txt &amp;&amp; pause</pre>
</div>

<div class="ex" id="StdOut">
<p><a class="ex_number" href="#StdOut"></a> The following functions can be used to run a command and retrieve its output or to run multiple commands in one go and retrieve their output.</p>
<pre>MsgBox % RunWaitOne("dir " A_ScriptDir)

MsgBox % RunWaitMany("
(
echo 명령어는 여기에 배치합니다,
echo 하나씩 실행될 것이고,
echo 결국 출력을 얻게 될 것입니다.
)")

RunWaitOne(command) {
    <em>; WshShell 객체: <a href="http://msdn.microsoft.com/ko-kr/library/aew9yb99">http://msdn.microsoft.com/ko-kr/library/aew9yb99</a></em>
    shell := ComObjCreate("WScript.Shell")
    <em>; cmd.exe를 통하여 명령어 하나를 실행합니다.</em>
    exec := shell.Exec(ComSpec " /C " command)
    <em>; 그 명령어의 출력을 읽어 돌려줍니다</em>
    return exec.StdOut.ReadAll()
}

RunWaitMany(commands) {
    shell := ComObjCreate("WScript.Shell")
    <em>; 명령어 반향을 끄고 cmd.exe를 엽니다</em>
    exec := shell.Exec(ComSpec " /Q /K echo off")
    <em>; 실행할 명령어를 새줄문자로 갈라서 전송합니다.</em>
    exec.StdIn.WriteLine(commands "`nexit")  <em>; 언제나 결국 종료합니다!</em>
    <em>; 모든 명령어의 출력을 읽어 돌려줍니다.</em>
    return exec.StdOut.ReadAll()
}
</pre>
</div>

<div class="ex" id="ExecScript">
<p><a class="ex_number" href="#ExecScript"></a> 주어진 코드를 새 AutoHotkey 프로세스로 실행합니다.</p>
<pre>ExecScript(Script, Wait:=true)
{
    shell := ComObjCreate("WScript.Shell")
    exec := shell.Exec("AutoHotkey.exe /ErrorStdOut *")
    exec.StdIn.Write(script)
    exec.StdIn.Close()
    if Wait
        return exec.StdOut.ReadAll()
}

<em>; 예제:</em>
InputBox expr,, 새 스크립트로 평가할 표현식을 입력하십시오.,,,,,,,, Asc("*")
result := ExecScript("FileAppend % (" expr "), *")
MsgBox % "Result: " result
</pre>
</div>

</body>
</html>
