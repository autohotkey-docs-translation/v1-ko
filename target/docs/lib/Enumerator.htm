<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>Enumerator Object - Definition &amp; Usage | AutoHotkey</title>
<meta name="description" content="The enumerator object allows items in a collection to be enumerated." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>열거 객체 <span class="ver">[AHK_L 49+]</span></h1>

<p>집단 안의 항목을 열거합니다.</p>

<h2 id="toc">목차</h2>
<ul class="indent">
  <li><a href="#Methods">Methods</a>:
    <ul>
      <li><a href="#Next">Next</a>: 다음으로 열거된 항목을 열람합니다.</li>
    </ul>
  </li>
</ul>

<h2 id="Methods">메쏘드</h2>
<div class="methodShort">
<h3 id="Next">Next</h3>
<p>다음으로 열거된 항목을 열람합니다.</p>
<pre class="Syntax">Boolean := Enum.<span class="func">Next</span>(OutputVar1 <span class="optional">, OutputVar2, ...</span>)</pre>
<dl>
  <dt>OutputVar1, OutputVar2</dt>
  <dd>구현에-종속적인 값을 열람합니다.</dd>
  <dt>...</dt>
  <dd>지원되면, 추가 매개변수.</dd>
</dl>
<p>This method returns 1 (true) if successful or 0 (false) if there were no items remaining.</p>
<p><a href="Object.htm#NewEnum">ObjNewEnum()</a>가 돌려주는 열거자는 키-값 쌍마다 한 번식 호출됩니다. 매개변수는 두 개까지 허용합니다:</p>
<ul>
  <li>OutputVar1: 키-값 쌍에서 키(<b>key</b>)를 받습니다.</li>
  <li>OutputVar2: <i>OutputVar1</i>와 연관된 값(<b>value</b>)를 받습니다.</li>
</ul>
<p>키-값 쌍은 구현에-정의된 순서로 반환됩니다. 즉, 전형적으로 할당된 순서와 같은 순서로 반환되지 않습니다. 기존의 키-값 쌍은 열거 중에 변경할 수는 있지만, 키를 삽입하거나 삭제하면 항목들이 여러 번 열거되거나 전혀 열거되지 않거나 뒤죽박죽이 됩니다.</p>
<p>관련 항목: <a href="For.htm">For-loop</a>, <a href="Object.htm#NewEnum">Object._NewEnum()</a></p>
<p>예제:</p>
<pre class="NoIndent"><em>; 샘플 데이터를 만듭니다.</em>
obj := Object("red", 0xFF0000, "blue", 0x0000FF, "green", 0x00FF00)

<em>; 열거합니다!</em>
enum := obj._NewEnum()
While enum[k, v]
    t .= k "=" v "`n"
MsgBox % t

<em>; <span class="ver">[AHK_L 59+]</span> 필요</em>
For k, v in obj
    s .= k "=" v "`n"
MsgBox % s
</pre>
</div>

</body>
</html>
