<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>IniWrite - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The IniWrite command writes a value or section to a standard format .ini file." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>IniWrite</h1>

<p>값이나 섹션을 표준 형식의 .ini 파일에 씁니다.</p>

<pre class="Syntax">
<span class="func">IniWrite</span>, Value, Filename, Section, Key
<span class="func">IniWrite</span>, Pairs, Filename, Section
</pre>
<h2 id="Parameters">매개변수</h2>
<dl>

  <dt>Value</dt>
  <dd>
    <p><em>Key</em>의 등호 사인 (=)의 오른쪽에 씌여질 문자열이나 숫자.</p>
    <p>텍스트가 길면, 여러 짧은 줄로 자를 수 있습니다. <a href="../Scripts.htm#continuation">계속 섹션</a>을 사용하면 되는데, 이렇게 하면 가독성과 유지관리성이 향상됩니다.</p>
  </dd>
  
  <dt>Pairs</dt>
  <dd>
    <p><span class="ver">[AHK_L 57+]:</span> .ini 파일에 쓸 섹션의 완전한 내용, [SectionName] 헤더는 제외. <em>Key</em>는 생략해야 합니다. <em>Pairs</em>은 빈 줄이 들어 있으면 안 됩니다. 섹션이 이미 존재하면, 마지막 키=값 쌍까지 모조리 덮어쓰기 됩니다. <em>Pairs</em>에는 등호 사인 (=) 없는 줄이 들어 있을 수 있지만, 이렇게 되면 결과는 일관성이 없습니다. 주석을 파일에 쓸 수 있지만, <a href="IniRead.htm">IniRead</a>이 다시 읽을 때 다 걷어내 버립니다.</p>
  </dd>

  <dt>Filename</dt>
  <dd><p>.ini 파일의 이름, 절대 경로가 지정되어 있지 않으면 <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a>에 있다고 간주합니다.</p></dd>

  <dt>Section</dt>
  <dd><p>.ini 파일의 섹션 이름. 각괄호 안에 나타나는 제목 문구입니다. (각괄호는 이 매개변수 안에 포함시키지 마십시오).</p></dd>

  <dt>Key</dt>
  <dd><p>.ini 파일의 키 이름.</p></dd>

</dl>
<h2 id="Error_Handling">에러 처리</h2>
<p><span class="ver">[v1.1.04+]</span>: 이 명령어는 실패하면 예외를 던질 수 있습니다. 더 자세한 정보는 <a href="Catch.htm#RuntimeErrors">실행시간 에러</a>를 참조하십시오.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a>은 문제가 있으면 1, 그렇지 않으면 0이 설정됩니다.</p>
<h2 id="Remarks">논평</h2>
<p>65,535 문자가 넘는 값을 파일에 쓸 수는 있지만, 그 결과는 일관성이 없으므로 보통 <a href="IniRead.htm">IniRead</a> 또는 다른 어플리케이션에서 올바르게 읽어 들일 수 없습니다.</p>
<p>표준 ini 파일은 모습이 다음과 같습니다:</p>
<pre>[SectionName]
Key=Value</pre>
<p>새 파일은 <a href="../Variables.htm#IsUnicode">AutoHotkey 버전</a>에 따라 시스템의 기본 ANSI 코드페이지 또는 UTF-16으로 생성됩니다.</p>
<p><b>유니코드:</b> IniRead와 IniWrite는 외부 함수 <a href="http://msdn.microsoft.com/ko-kr/library/ms724353.aspx">GetPrivateProfileString</a>와 <a href="http://msdn.microsoft.com/ko-kr/library/ms725501.aspx">WritePrivateProfileString</a>에 의존해 값을 읽고 씁니다. 이런 함수들은 유니코드를 UTF-16 파일만 지원합니다; 다른 모든 파일은 시스템의 기본 ANSI 코드 페이지를 사용한다고 간주됩니다. <a href="../Variables.htm#IsUnicode">유니코드 스크립트</a>에서, IniWrite은 각 새 파일에 UTF-16을 사용합니다. 이게 싫다면, IniWrite를 호출하기 전에 파일이 존재하는지 먼저 확인하십시오. 예를 들어:</p>
<pre>FileAppend,, NonUnicode.ini, CP0 <em>; 마지막 매개변수는 대부분의 경우 선택적입니다.</em></pre>
<h2 id="Related">관련 항목</h2>
<p><a href="IniDelete.htm">IniDelete</a>, <a href="IniRead.htm">IniRead</a>, <a href="RegWrite.htm">RegWrite</a></p>
<h2 id="Examples">예제</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Writes a value to a key located in section2 of a standard format .ini file.</p>
<pre>IniWrite, 이것이 새 값입니다, C:\Temp\myfile.ini, section2, key</pre>
</div>

</body>
</html>
