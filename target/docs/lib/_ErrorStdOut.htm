<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>#ErrorStdOut - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The #ErrorStdOut directive sends any syntax error that prevents a script from launching to the standard error stream (stderr) rather than displaying a dialog." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#ErrorStdOut</h1>

<p>스크립트의 실행을 막는 구문 에러를 대화상자에 보여주지 않고 표준에러(stderr)로 보냅니다.</p>

<pre class="Syntax"><span class="func">#ErrorStdOut</span> <span class="optional">Encoding</span></pre>

<h2 id="Parameters">매개변수</h2>
<dl>
  <dt>Encoding <span class="ver">[v1.1.33+]</span></dt>
  <dd>An <a href="FileEncoding.htm">encoding string</a> specifying how to encode the output. For example, <code>#ErrorStdOut UTF-8</code> encodes error messages as UTF-8 before sending them to stderr. Whatever program is capturing the output must support UTF-8, and in some cases may need to be configured to expect it. 생략하면, 기본값은 <code>CP0</code>입니다.</dd>
</dl>

<h2 id="Remarks">논평</h2>
<p><span class="ver">[AHK_L 42+]:</span> 에러는 표준출력(stdout)이 아니라 표준에러(stderr)에 씌여집니다. 명령 프롬프트와 멋진 편집기는 보통 둘 다 보여줍니다. 이 변경은 <span class="ver">v1.1.19.01</span> 이전까지 문서화되어 있지 않았습니다.</p>
<p>이 덕분에 TextPad, SciTE, Crimson, 그리고 EditPlus와 같은 멋진 편집기들은 구문 에러가 일어날 때 문제의 줄로 바로 점프해 갈 수 있습니다. #ErrorStdOut 지시어는 스크립트마다 추가해도 좋을 것입니다. 보통 오토핫키 스크립트를 기동할 때 편집기를 <a href="../Scripts.htm#cmd">명령 줄 스위치</a> <strong>/ErrorStdOut</strong>를 사용하도록 설정하는 것이 더 좋습니다 (설정에 관한 지시 사항은 아래를 참조하십시오).</p>
<p>오토핫키는 콘솔 프로그램이 아니기 때문에, 에러는 명령 프롬프트에 직접 나타나지 않습니다. This can be worked around by 1) <span class="ver">[v1.1.33+]</span> compiling the script with the <a href="../misc/Ahk2ExeDirectives.htm#ConsoleApp">Ahk2Exe ConsoleApp directive</a>, or 2) capturing the script's output via piping or redirection. 예를 들어:</p>
<pre class="no-highlight">"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>2&gt;&amp;1 |more</strong>
"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>2&gt;"Syntax-Error Log.txt"</strong></pre>
<p>출력을 직접 클립보드로 파이프 처리해 넣을 수도 있습니다. <a href="https://www.autohotkey.com/misc/cb.zip">cb.zip</a> (4 KB)을 내려 받고, 다음 예제를 따르십시오:</p>
<pre class="no-highlight">"C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "My Script.ahk" <strong>2&gt;&amp;1 |cb.exe</strong></pre>
<p class="note"><strong>주의:</strong> <code>2&gt;&amp;1</code>는 stderr를 stdout로 방향전환되도록 만듭니다. 반면에 <code>2&gt;<i>Filename</i></code>는 stderr만 파일로 방향전환합니다.</p>
<p>다른 지시어처럼, #ErrorStdOut는 조건적으로 실행할 수 없습니다.</p>

<h2 id="Instructions_for_specific_editors">특정 편집기를 위한 지시 사항</h2>
<p><strong>EditPlus</strong>:</p>
<ol>
  <li>메뉴 바에서, 도구 &gt; 사용자 도구 구성을 선택합니다.</li>
  <li>다음 버튼을 누릅니다: 도구 &gt; 프로그램</li>
  <li>메뉴 텍스트: 여러분의 마음대로 설정합니다</li>
  <li>명령어: <code>C:\Program Files\AutoHotkey\AutoHotkey.exe</code></li>
  <li>인자: <code class="no-highlight">/ErrorStdOut "$(FilePath)"</code></li>
  <li>최초 디렉토리: <code>$(FileDir)</code></li>
  <li>출력 캡쳐: 네</li>
</ol>
<p><strong>TextPad</strong>:</p>
<ol>
  <li>메뉴 바에서, Configure &gt; Preferences를 선택합니다.</li>
  <li>Tools 엔트리를 확대합니다.</li>
  <li>Add 버튼을 누르고 "Program"을 선택합니다.</li>
  <li>복사해 붙여 넣습니다 (여러분의 경로에 맞게 조절하십시오): <code>C:\Windows\System32\cmd.exe</code> -- 다음 OK를 누릅니다.</li>
  <li>리스트 박스에 새로 추가된 버튼을 세번 클릭합니다 (cmd.exe). 그리고 이름을 여러분 마음대로 바꿉니다 (예,. Launch Script).</li>
  <li>Apply를 누릅니다.</li>
  <li>왼쪽 트리에서 새 항목을 선택하고 다음 정보를 입력합니다:</li>
  <li>Command (이미 채워져 있을 것입니다): <code>cmd.exe</code> (또는 전체 경로를 지정)</li>
  <li>Parameters (필요하면 여러분의 경로에 맞게 조절): <code class="no-highlight">/c ""C:\Program Files\AutoHotkey\AutoHotkey.exe" /ErrorStdOut "$File""</code></li>
  <li>Initial folder: <code>$FileDir</code></li>
  <li>다음 박스를 체크합니다: 1) Run minimized; 2) Capture output.</li>
  <li>OK를 누릅니다. 새로 추가된 항목이 이제 Tools 메뉴에 나타날 것입니다.</li>
</ol>

<h2 id="Related">관련 항목</h2>
<p><a href="FileAppend.htm">FileAppend</a> (because it can also send text to stderr or stdout)</p>
<h2 id="Examples">예제</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Sends any syntax error that prevents the script from launching to stderr rather than displaying a dialog.</p>
<pre>#ErrorStdOut</pre>
</div>

</body>
</html>
