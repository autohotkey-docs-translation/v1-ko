<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>SetRegView - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The SetRegView command sets the registry view used by RegRead, RegWrite, RegDelete and registry loops, allowing them in a 32-bit script to access the 64-bit registry view and vice versa." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>SetRegView <span class="ver">[v1.1.08+]</span></h1>
<p>Sets the registry view used by <a href="RegRead.htm">RegRead</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="RegDelete.htm">RegDelete</a> and <a href="LoopReg.htm">registry loops</a>, allowing them in a 32-bit script to access the 64-bit registry view and vice versa.</p>
<pre class="Syntax"><span class="func">SetRegView</span>, RegView</pre>

<h2 id="Parameters">매개변수</h2>
<dl>

  <dt>RegView</dt>
  <dd>
      <p>레지스트리를 32-비트 어플리케이션처럼 보려면 <strong>32</strong>를 지정하고, 64-비트 어플리케이션처럼 보려면 <strong>64</strong>를 지정하십시오.</p>
      <p>정상 행위로 복구하려면 단어 <strong>Default</strong>를 지정하십시오.</p>
    </dd>

</dl>

<h2 id="General_Remarks">총평</h2>
<p>이 명령어는 Windows 64-비트에만 유용합니다. Windows 32-비트에서는 효과가 없습니다.</p>
<p>64-비트 시스템에서, 32-비트 어플리케이션은 <a href="http://msdn.microsoft.com/ko-kr/library/aa384249">WOW64</a>라고 부르는 Windows 서브시스템 위에서 실행됩니다. 기본으로, 시스템은 충돌을 피하기 위해 어떤 <a href="http://msdn.microsoft.com/ko-kr/library/aa384253">레지스트리 키</a>는 방향전환합니다. 예를 들어, 32-비트 스크립트에서<code>HKLM\SOFTWARE\AutoHotkey</code>는 <code>HKLM\SOFTWARE\Wow6432Node\AutoHotkey</code>으로 방향전환됩니다. SetRegView를 사용하면 32-비트 스크크립트의 레지스트리 명령어가 64-비트 레지스트리 뷰로 방향전환된 키에 그리고 그 반대로 접근할 수 있습니다.</p>

<p>내장 변수 <em>A_RegView</em>에 현재 설정이 담깁니다. 새로 기동된 <a href="../misc/Threads.htm">쓰레드</a>는 (<a href="../Hotkeys.htm">핫키</a>, <a href="Menu.htm">맞춤 메뉴 항목</a>, 또는 <a href="SetTimer.htm">타이머</a> 서브루틴) 이 명령어에 대한 기본 설정을 가지고 새롭게 시작합니다. 이 설정은 이 명령어를 자동-실행 섹션에 (스크립트의 상단 부분) 사용하면 바꿀 수 있습니다.</p>

<h2 id="Related">관련 항목</h2>
<p><a href="RegRead.htm">RegRead</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="RegDelete.htm">RegDelete</a>, <a href="LoopReg.htm">Loop (레지스트리)</a></p>

<h2 id="Examples">예제</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 특정한 레지스트리 뷰를 설정하는 법과 레지스트리 방향전환으로 스크립트에 영향을 주는 법을 보여줍니다.</p>
<pre id="example1">
<em>; 레지스트리 키에 32-비트 어플리케이션처럼 접근합니다.</em>
SetRegView 32
RegWrite REG_SZ, HKLM, SOFTWARE\Test.ahk, Value, 123

<em>; 레지스트리 키에 64-비트 어플리케이션처럼 접근합니다.</em>
SetRegView 64
RegRead value, HKLM, SOFTWARE\Wow6432Node\Test.ahk, Value
RegDelete HKLM, SOFTWARE\Wow6432Node\Test.ahk

MsgBox Read value '%value%' via Wow6432Node.

<em>; 레지스트리 뷰를 기본값으로 복구합니다.
; 기본값은 스크립트가 32-비트인가 64-비트인가에 따라 다릅니다.</em>
SetRegView Default
<em>;...</em>
</pre>
</div>

<div class="ex" id="Ex32Or64">
<p><a class="ex_number" href="#Ex32Or64"></a> 스크립트가 실행중인 운영 체제와 EXE와 의 유형을 탐지하는 법을 보여줍니다.</p>
<pre id="example2">if (A_PtrSize = 8)
    script_is := "64-bit"
else <em>; if (A_PtrSize = 4)</em>
    script_is := "32-bit"

if (A_Is64bitOS)
    OS_is := "64-비트입이다"
else
    OS_is := "32-비트입니다. 오직 단일 레지스트리 뷰만 있습니다"

MsgBox 이 스크립트는 %script_is%이고, OS는 %OS_is%입니다.</pre>
</div>

</body>
</html>
