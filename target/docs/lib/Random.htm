<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>Random - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The Random command generates a pseudo-random number." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Random</h1>

<p>의사-무작위 수를 생성합니다.</p>

<pre class="Syntax">
<span class="func">Random</span>, OutputVar <span class="optional">, Min, Max</span>
<span class="func">Random</span>, , NewSeed
</pre>
<h2 id="Parameters">매개변수</h2>
<dl>

  <dt>OutputVar</dt>
  <dd><p>결과를 저장할 변수의 이름. The format of stored floating point numbers is determined by <a href="SetFormat.htm">SetFormat</a> if its <a href="SetFormat.htm#Fast">slow mode</a> is used; otherwise SetFormat only affects formatting when the number is converted to a string.</p></dd>

  <dt>Min</dt>
  <dd>생성될 가장 작은 수. 음수나 부동 소수점수 또는 <a href="../Variables.htm#Expressions">표현식</a> 가능. 생략하면, 가장 작은 값은 0입니다. 정수에 대하여 허용되는 가장 낮은 값은 -2147483648 for integers이지만, 부동 소수점 수는 제한이 없습니다.</dd>

  <dt>Max</dt>
  <dd><p>생성될 가장 큰 수, 음수나 부동 소수점 수 또는 <a href="../Variables.htm#Expressions">표현식</a> 가능. 생략하면, 가장 큰 수는 정수에 대하여 2147483647입니다 (그러나 부동 소수점 수는 제한이 없습니다).</p></dd>

  <dt>NewSeed</dt>
  <dd><p>이 모드는 무작위 수 발생자에 <em>NewSeed</em>로 다시 씨앗을 먹입니다 (<a href="../Variables.htm#Expressions">표현식</a> 가능). 이것은 이어 발생되는 모든 무작위 수에 영향을 미칩니다. <em>NewSeed</em>는 0부터 4294967295 (0xFFFFFFFF) 사이의 정수여야 합니다. 다시 씨앗 먹기기는 발생된 무작위 수의 품질/보안성을 향상시킬 수 있습니다. 특히 <em>NewSeed</em>가 품질이 떨어지는 의사-무작위 수가 아니라 진짜 무작위수이면 더 좋습니다. 일반적으로, 씨앗 다시 먹이기는 한 번 이상 할 필요가 없습니다.</p>
      <p>스크립트에서 다시 씨앗 먹이기가 사용되지 않았다면, 씨앗은 64-비트 값의 아래쪽 32-비트로 시작합니다. 이 값은 1601년 1월 1일 이후로 100-나노초 간격으로 나눈 개수입니다. 이 값은 ~7.2 분마다 0부터 4294967295 사이를 왔다 갔다 합니다.</p></dd>

</dl>

<h2 id="Remarks">논평</h2>
<p>이 명령어는 의사-무작위 수를 산출합니다. 이 수는 진짜 무작위 수를 흉내 내지만 실제로는 다음 숫자가 무엇인지 추측/결정하기가 지극히 어려운 복잡한 공식에 기반한 숫자일 뿐입니다.</p>
<p>지정된 범위 안의 숫자는 모두 대략 비슷한 빈도로 발생됩니다 (그렇지만, 아래의 "알려진 한계"를 참조하십시오).</p>
<p><em>Min</em> 또는 <em>Max</em>에 소수 점이 들어 있다면, 최종 결과는 부동 소수점 수가 됩니다. 형식은 <a href="SetFormat.htm">SetFormat</a>에 의하여 결정됩니다. 그렇지 않으면, 그 결과는 정수입니다.</p>
<p>알려진 한계: 부동 소수점 수에 대하여: 1) 특정 범위에 대하여 대략 4,294,967,296개의 구분된 숫자만 발생시킬 수 있습니다. 그래서 범위 안의 다른 모든 숫자들은 절대로 발생되지 않습니다; 2) 가끔 결과가 지정된 최대값(<em>Max</em>)보다 더 큰 경우가 있습니다. (이것은 부분적으로 부동 소수점 수로부터 정밀도를 물려 받았기 때문입니다).</p>
<h2 id="Related">관련 항목</h2>
<p><a href="Format.htm">Format()</a>, <a href="SetFormat.htm">SetFormat</a></p>
<h2 id="Examples">예제</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Generates a random integer in the range 1 to 10 and stores it in <var>rand</var>.</p>
<pre>Random, rand, 1, 10</pre>
</div>

<div class="ex" id="ExFloat">
<p><a class="ex_number" href="#ExFloat"></a> Generates a random floating point number in the range 0.0 to 1.0 and stores it in <var>rand</var>.</p>
<pre>Random, rand, 0.0, 1.0</pre>
</div>

<h2 id="Comments_based_on_the_original_source">원본에 있는 주석 인용</h2>
<p>This function uses the Mersenne Twister random number generator, MT19937, written
  by Takuji Nishimura and Makoto Matsumoto, Shawn Cokus, Matthe Bellew and Isaku
  Wada.</p>
<p>The Mersenne Twister is an algorithm for generating random numbers. It was
  designed with consideration of the flaws in various other generators. The period,
  2<sup>19937</sup>-1, and the order of equidistribution, 623 dimensions, are
  far greater. The generator is also fast; it avoids multiplication and division,
  and it benefits from caches and pipelines. For more information see the inventors'
  web page at <a href="http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html">www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html</a></p>
<p>Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura, All rights
  reserved.</p>
<p>Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:</p>
<ol>
  <li>Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.</li>
  <li>Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.</li>
  <li>The names of its contributors may not be used to endorse or promote products
    derived from this software without specific prior written permission.</li>
</ol>
<p class="J">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>
<p>Do NOT use for CRYPTOGRAPHY without securely hashing several returned values
  together, otherwise the generator state can be learned after reading 624 consecutive
  values.</p>
<p>When you use this, send an email to: m-mat@math.sci.hiroshima-u.ac.jp with an appropriate
  reference to your work.</p>
<p><i>This above has been already been done for AutoHotkey, but if you use the Random command in a publicly distributed application,
    consider sending an e-mail to the above person to thank him.</i></p>

</body>
</html>
