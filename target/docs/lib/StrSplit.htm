<!DOCTYPE HTML>
<html lang="ko">
<head>
<title>StrSplit() - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The StrSplit function separates a string into an array of substrings using the specified delimiters." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrSplit() <span class="ver">[v1.1.13+]</span></h1>
<p>문자열을 지정된 가름자를 사용하여 부분 문자열 배열로 가릅니다.</p>
<pre class="Syntax">
Array := <span class="func">StrSplit</span>(String <span class="optional">, Delimiters, OmitChars, MaxParts</span>)</pre>

<h2 id="Parameters">매개변수</h2>
<dl>

  <dt>String</dt>
  <dd><p>분리할 문자열.</p></dd>

  <dt>Delimiters</dt>
  <dd>
    <p>이 매개변수가 비어 있거나 생략되면, 입력 문자열의 각 문자는 별도의 부문자열로 간주됩니다.</p>
    <p>그렇지 않으면, <em>Delimiters</em>는 단일 문자열이거나 문자열 배열일 수 있습니다. 각 구분자는 부문자열 사이의 경계가 나타나는 곳을 결정하는데 사용됩니다. 구분자는 부문자열의 일부분으로 간주되지 않으므로, 절대로 반환된 배열에 포함되지 않습니다. 또한, 입력 문자열에서 구분자 한 쌍 사이에 아무것도 없다면, 그에 상응하는 배열 원소는 빈 원소입니다.</p>      
    <p>예를 들어: <code>","</code>는 문자열을 쉼표가 나타날 때마다 분리합니다. 비슷하게, <code>[A_Tab, A_Space]</code>는 입력 문자열에서 스페이스나 탭을 만날 때마다 새 배열 원소를 생성합니다.</p>
  </dd>

  <dt>OmitChars</dt>
  <dd>
    <p>각 배열 원소의 앞과 뒤로부터 배제할 문자열의 리스트 (대소문자 구분, 선택적). For example, if <em>OmitChars</em> is <code>" `t"</code>, spaces and tabs will be removed from the beginning and end (but not the middle) of every element.</p>
    <p><em>Delimiters</em>가 비어 있으면, <em>OmitChars</em>는 배열로부터 어느 문자를 배제해야 하는지를 나타냅니다.</p>
  </dd>

  <dt>MaxParts <span class="ver">[v1.1.28+]</span></dt>
  <dd>If omitted, it defaults to -1, which means "no limit". Otherwise, specify the maximum number of substrings to return. If non-zero, the string is split a maximum of <em>MaxParts</em>-1 times and the remainder of the string is returned in the last substring (excluding any leading or trailing <em>OmitChars</em>).</dd>

</dl>

<h2 id="Return_Value">반환 값</h2>
<p>This function returns an <a href="../Objects.htm#Usage_Simple_Arrays">array</a> (object) of strings.</p>

<h2 id="Remarks">논평</h2>
<p>스페이스와 탭 같은 공백 문자들은 유지됩니다. 단, 그 문자 자체가 구분자이거나 <em>OmitChars</em>에 포함되는 경우는 예외입니다. 탭과 스페이스는 <a href="Trim.htm">Trim</a> 함수를 호출해 변수의 양쪽 끝으로부터 다듬을 수 있습니다. 예를 들어: <code>MyArray1 := Trim(MyArray1)</code>.</p>
<p>표준 CSV (쉼표로 가른 값(comma separated value)) 형식의 문자열을 가르려면, <a href="LoopParse.htm">파싱 회돌이</a>를 사용하십시오. CSV 처리가 내장되어 있습니다.</p>
<p>문자열을 가르기 전에 필드를 다른 순서로 정렬하려면, <a href="Sort.htm">Sort</a> 명령어를 사용하십시오.</p>
<p>부문자열을 메모리에 영원히 저장할 필요가 없다면, <a href="LoopParse.htm">파싱 회돌이</a>의 사용을 고려해 보십시오 -- 특히 <em>String</em>가 매우 방대하다면 꼭 고려해 보시기를 바랍니다. 그런 경우는 방대한 양의 메모리가 저장될 것입니다. 예를 들어:</p>
<pre>Colors := "red,green,blue"
Loop, Parse, Colors, % ","
    MsgBox % "Color number " A_Index " is " A_LoopField</pre>

<h2 id="Related">관련 항목</h2>
<p><a href="StringSplit.htm">StringSplit</a>, <a href="LoopParse.htm">Parsing loop</a>, <a href="../misc/Arrays.htm">Arrays</a>, <a href="Sort.htm">Sort</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="InStr.htm">InStr()</a>, <a href="SubStr.htm">SubStr()</a>, <a href="StrLen.htm">StrLen()</a>, <a href="StringLower.htm">StringLower</a>, <a href="StringLower.htm">StringUpper</a>, <a href="StrReplace.htm">StrReplace()</a></p>

<h2 id="Examples">예제</h2>
<div class="ex" id="ExSpace">
<p><a class="ex_number" href="#ExSpace"></a> Separates a sentence into an array of words and reports the fourth word.</p>
<pre>TestString := "This is a test."
word_array := StrSplit(TestString, A_Space, ".") <em>; 점은 제외합니다.</em>
MsgBox % "The 4th word is " word_array[4]</pre>
</div>

<div class="ex" id="ExComma">
<p><a class="ex_number" href="#ExComma"></a> Separates a comma-separated list of colors into an array of substrings and traverses them, one by one.</p>
<pre>colors := "red,green,blue"
for index, color in StrSplit(colors, ",")
    MsgBox % "Color number " index " is " color</pre>
</div>

</body>
</html>
